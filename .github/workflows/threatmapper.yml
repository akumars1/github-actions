# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Install Docker
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: ${{ secrets.SSH_HOST }}
        key:  ${{ secrets.SSH_KEY }}
        username: ${{ secrets.SSH_USERNAME }}
        script: |
          sudo apt-get update
          sudo apt-get install ca-certificates curl gnupg lsb-release -y
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y
          sudo usermod -aG docker $USER
          
    - name: Setup Console
      uses: cross-the-world/ssh-pipeline@v1.2.0
      with:
        host: $ {{secrets.SSH_HOST}}
        user: $ {{secrets.SSH_USER}}
        key: $ {{secrets.SSH_KEY}}
        script: |
          git clone https://github.com/deepfence/ThreatMapper.git
          cd ThreatMapper/deployment_scripts
          export IMAGE_REPOSITORY=deepfenceio 
          env DF_IMG_TAG=1.4.3-rc2 docker compose up -d
          
          
          
      
    
